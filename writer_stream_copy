#!/usr/bin/env php
<?php

class StreamCopyWriter
{
    /**
     * @var string
     */
    private $filename;

    /**
     * @var resource
     */
    private $handle;

    /**
     * @param string $filename
     */
    function open($filename)
    {
        $this->filename = $filename;
        $this->handle = fopen('php://temp/', 'wb');
    }

    /**
     * @param string $data
     */
    function append($data)
    {
        fwrite($this->handle, $data);
    }

    function finish()
    {
        $handle = fopen('compress.zlib://' . $this->filename, 'wb9');
        rewind($this->handle);
        stream_copy_to_stream($this->handle, $handle);
        fclose($handle);
        fclose($this->handle);
        $this->handle = null;
    }
}

$writer = new StreamCopyWriter();

if (empty($argv[1]) || !is_numeric($argv[1])) {
    throw new \Exception('Not set data size');
}

if (empty($argv[2]) || !is_numeric($argv[2])) {
    throw new \Exception('Not set total iterations');
}

$data_size = (int) $argv[1]; // in Mb
$data_size *= 1024;
$iterations = (int) $argv[2];

$data = str_repeat('1', 1024); // 1 Kb

printf("stream_copy_to_stream()\n");
printf("Data size: %d Mb\n", $data_size);
printf("Iterations: %d\n", $iterations);

// test
$start = microtime(true);
for ($i = $iterations; $i; $i--) {
    $filename = tempnam(sys_get_temp_dir(), 'test_writer');
    $writer->open($filename);
    for ($j = 0; $j <= $data_size; $j++) {
        $writer->append($data);
    }
    $writer->finish();
    unlink($filename);
}
printf("Write: %f\n".PHP_EOL, microtime(true) - $start);
